<!doctype html>
<html lang="es">
<head>
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1">
<title>Amor en Pixel – Abrazo</title>
<meta name="description" content="Pareja vista desde atrás (buzo azul + vestido amarillo) con perrito entre ambos. Pixel art más realista.">
<meta name="theme-color" content="#f6b982">
<style>
  :root{
    --bg1:#f8c79a;   /* melocotón claro */
    --bg2:#f3b37e;   /* melocotón medio */
    --panel:#fff7f0cc;
    --text:#2b2b2b;
    --radius:14px;
    --shadow:0 18px 48px rgba(0,0,0,.15);
  }
  *{box-sizing:border-box}
  html,body{height:100%}
  body{
    margin:0;
    background:
      radial-gradient(900px 600px at 50% 45%, var(--bg1) 0%, var(--bg2) 85%);
    font-family: system-ui, -apple-system, Segoe UI, Roboto, Arial, sans-serif;
    color:var(--text); overflow:hidden;
  }
  canvas{
    position:fixed; inset:0; width:100vw; height:100vh; display:block;
    image-rendering: pixelated;           /* visual nítido */
    image-rendering: crisp-edges;
  }
  main{
    position:fixed; left:50%; bottom:16px; transform:translateX(-50%);
    width:min(960px, calc(100% - 20px)); padding:10px 12px;
    background:var(--panel); backdrop-filter: blur(8px);
    border:1px solid #f0d2b4; border-radius:var(--radius); box-shadow:var(--shadow);
  }
  h1{margin:0 0 6px; font-size:clamp(18px, 2.6vw, 24px)}
  p.small{margin:.25rem 0 .75rem; color:#6b5b4e; font-size:12px}
  button{
    appearance:none; border:1px solid #d7ae85; background:#f6d8bc; color:#2b2b2b;
    padding:8px 12px; border-radius:12px; cursor:pointer; transition:.18s;
  }
  button:hover{transform:translateY(-1px); background:#f3cda9}
</style>
</head>
<body>
<canvas id="scene" aria-label="Pareja de espaldas abrazada, con perrito entre ambos. Pixel art."></canvas>

<main>
  <h1>✨ Amor en Pixel – Abrazo</h1>
  <p class="small">Estilo más realista (contorno negro, colores planos). Listo para publicar en GitHub Pages.</p>
  <button id="save">⬇️ Descargar PNG</button>
</main>

<script>
(() => {
  const C = document.getElementById('scene');
  const X = C.getContext('2d', {alpha:true, desynchronized:true});
  let W=0, H=0, DPR=1;

  function resize(){
    DPR = Math.max(1, Math.min(2.5, window.devicePixelRatio || 1));
    W = innerWidth; H = innerHeight;
    C.width = Math.floor(W * DPR); C.height = Math.floor(H * DPR);
    C.style.width = W + 'px'; C.style.height = H + 'px';
    X.setTransform(DPR,0,0,DPR,0,0);
    X.imageSmoothingEnabled = false;
    drawAll();
  }
  addEventListener('resize', resize, {passive:true});
  resize();

  // --------- PALETA ----------
  const PAL = {
    outline:'#0b0b0b',
    skin:'#f2c7a7', skin2:'#e7b896',
    hairGirl:'#6a4a3a', hairBoy:'#3f3f3f',
    hoodie:'#2d73ff', hoodieShade:'#1b57cc',
    jeans:'#4b5563', shoe:'#2a2a2a',
    dress:'#fff08e', dressShade:'#e8d175',
    dogW:'#ffffff', dogS:'#e7ecf7', nose:'#333333', blush:'#ff9bb3'
  };

  // Mapa de caracteres -> color
  const COL = {
    'O':PAL.outline,
    'S':PAL.skin, 's':PAL.skin2,
    'H':PAL.hairGirl, 'h':PAL.hairBoy,
    'U':PAL.hoodie, 'u':PAL.hoodieShade,
    'J':PAL.jeans, 'K':PAL.shoe,
    'D':PAL.dress, 'd':PAL.dressShade,
    'W':PAL.dogW, 'w':PAL.dogS, 'N':PAL.nose, 'B':PAL.blush,
    '_':null
  };

  // --------- SPRITES (vista trasera, más realista) ----------
  // Ella (vestido amarillo, lentes insinuados por ancho de cabeza)
  const GIRL = [
"________OOOOOO________",
"_______OOOHHHOO_______",
"______OOHHHHHOOO______",
"_____OOHHHHHHHOO______",
"_____OOSS___SSOO______",
"_____OOHHHHHHOO_______",
"______OOHHHOO_________",
"_______OOOOOO_________",
"_______ODDDDO_________",
"______ODDDDDDO________",
"_____ODDDdDDDDO_______",
"_____ODDDDDDDDO_______",
"______OD____DO________",
"_______O____O_________",
  ];

  // Él (buzo azul, brazo por detrás abrazando a ella)
  const BOY = [
"________OOOOOO________",
"_______OOOhhhOO_______",
"______OOhhhhhhOO______",
"_____OOhhhhhhhhOO_____",
"_____OOSSS__SSOO______",
"______OUUUUUUUO_______",
"_____OUUUuUUUUUO______",
"____OUUUUUUUUUUUO_____",
"___OUUUUUUUUUUUUUO____",
"___OUUUUUUUUUUUUUO____",
"____OUUUUUUUUUUUO_____",
"_____OUUUUUUUUUO______",
"______O UUUUU O_______",
"_______O  UU  O_______",
"________O    O________",
  ];

  // Perrito sentado al centro (frente)
  const DOG = [
"________OOOO________",
"______OOWWWWO_______",
"_____OOWWWWWWO______",
"____OOWWWwwWWWO_____",
"___OOWW B  B WWOO___",
"___OOWW  NN  WWO___",
"____OOWWWWWWWOO_____",
"_____OOWW__WWO______",
"______O W__W O______",
"_______O____O_______",
  ];

  function drawSprite(sprite, sx, sy, px){
    // contorno
    for(let r=0;r<sprite.length;r++){
      const row = sprite[r];
      for(let c=0;c<row.length;c++){
        if(row[c] !== 'O') continue;
        X.fillStyle = PAL.outline;
        X.fillRect((sx + c*px)|0, (sy + r*px)|0, px, px);
      }
    }
    // relleno
    for(let r=0;r<sprite.length;r++){
      const row = sprite[r];
      for(let c=0;c<row.length;c++){
        const ch = row[c];
        if(!COL[ch] || ch === 'O') continue;
        X.fillStyle = COL[ch];
        X.fillRect((sx + c*px)|0, (sy + r*px)|0, px, px);
      }
    }
  }

  function drawAll(){
    // el fondo lo pinta CSS; aquí solo dibujamos la escena y una sombra base
    X.clearRect(0,0,W,H);

    const px = Math.max(4, Math.floor(Math.min(W,H) * 0.018)); // tamaño de pixel
    const baseY = Math.floor(H * 0.78);

    // anchuras en pixeles
    const gW = GIRL[0].length * px;
    const bW = BOY[0].length  * px;
    const dW = DOG[0].length  * px;

    // posiciones: ella izquierda, él derecha, perro entre ambos
    const cx = Math.floor(W/2);
    const gx = Math.floor(cx - gW*0.95);
    const bx = Math.floor(cx + bW*0.05);
    const dx = Math.floor(cx - dW/2);

    // sombra base (línea gruesa)
    X.fillStyle = "rgba(0,0,0,.75)";
    X.fillRect(Math.floor(W*0.06), baseY + 10, Math.floor(W*0.88), 3);

    // sprites
    drawSprite(GIRL, gx, baseY - GIRL.length*px, px);
    drawSprite(BOY,  bx, baseY - BOY.length*px,  px);
    drawSprite(DOG,  dx, baseY - DOG.length*px + 2*px, Math.max(3, Math.floor(px*0.9)));
  }

  // Descargar PNG (2x)
  document.getElementById('save').addEventListener('click', () => {
    const off = document.createElement('canvas');
    const s = 2;
    off.width = W * s; off.height = H * s;
    const o = off.getContext('2d'); o.imageSmoothingEnabled = false;
    // copiar el fondo melocotón para que no quede transparente
    const g = o.createRadialGradient(off.width/2, off.height*0.45, off.width*0.1, off.width/2, off.height*0.45, off.width*0.6);
    g.addColorStop(0, '#f8c79a'); g.addColorStop(1, '#f3b37e');
    o.fillStyle = g; o.fillRect(0,0,off.width,off.height);
    // dibujar la escena actual
    o.drawImage(C, 0, 0, off.width, off.height);
    const url = off.toDataURL('image/png');
    const a = document.createElement('a'); a.href = url; a.download = 'amor_en_pixel_abrazo.png'; a.click();
  });
})();
</script>
</body>
</html>
